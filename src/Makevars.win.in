TARGET = @TARGET@
PROFILE = @PROFILE@

TARGET_DIR = rust/target
LIBDIR = $(TARGET_DIR)/$(TARGET)/$(subst dev,debug,$(PROFILE))
STATLIB = $(LIBDIR)/libgeokit.a
PKG_LIBS = -L$(LIBDIR) -lgeokit -lws2_32 -ladvapi32 -luserenv -lbcrypt -lntdll

all: $(SHLIB) rust_clean

.PHONY: $(STATLIB)

$(SHLIB): $(STATLIB)

CARGOTMP = $(CURDIR)/.cargo
VENDOR_DIR = vendor

$(STATLIB):
	# When the GNU toolchain is used (i.e. on CRAN), -lgcc_eh is specified for
	# building proc-macro2, but Rtools doesn't contain libgcc_eh. This isn't used
	# in actual, but we need this tweak to please the compiler.
	mkdir -p $(LIBDIR)/libgcc_mock && touch $(LIBDIR)/libgcc_mock/libgcc_eh.a

	if [ -f ./rust/vendor.tar.xz ]; then \
		tar xf rust/vendor.tar.xz && \
		mkdir -p $(CARGOTMP) && \
		cp rust/vendor-config.toml $(CARGOTMP)/config.toml; \
	fi

	# Build the project using Cargo with additional flags
	export CARGO_HOME=$(CARGOTMP) && \
		export LIBRARY_PATH="$(LIBRARY_PATH);$(LIBDIR)/libgcc_mock" && \
		export RUSTFLAGS="$(RUSTFLAGS) --print=native-static-libs" && \
		cargo build --manifest-path=rust/Cargo.toml --target-dir=$(TARGET_DIR) @CONFIGURE_ARGS@

	# Always clean up CARGOTMP
	rm -Rf $(CARGOTMP);

rust_clean: $(SHLIB)
	rm -Rf $(CARGOTMP) $(VENDOR_DIR) @CLEAN_TARGET@

clean:
	rm -Rf $(SHLIB) $(STATLIB) $(OBJECTS) $(TARGET_DIR) $(VENDOR_DIR)
